<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>loner`s Blog</title>
  <icon>https://www.gravatar.com/avatar/20ee0b9978899e0f60f986538334c375</icon>
  <subtitle>lonerOrz</subtitle>
  <link href="https://lonerorz.github.io/atom.xml" rel="self"/>
  
  <link href="https://lonerorz.github.io/"/>
  <updated>2025-03-31T17:27:34.743Z</updated>
  <id>https://lonerorz.github.io/</id>
  
  <author>
    <name>loner</name>
    <email>2788892716@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装ArchLinux</title>
    <link href="https://lonerorz.github.io/posts/0.html"/>
    <id>https://lonerorz.github.io/posts/0.html</id>
    <published>2025-03-30T16:00:00.000Z</published>
    <updated>2025-03-31T17:27:34.743Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天演示Archlinux的安装与配置"><a href="#今天演示Archlinux的安装与配置" class="headerlink" title="今天演示Archlinux的安装与配置"></a>今天演示Archlinux的安装与配置</h1><p>我打算安装到<code>btrfs</code>文件系统上，桌面用<code>Hyprland</code>，显卡是N卡，附加Windows的双系统引导。</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><ol><li><p><strong>下载ISO镜像文件</strong><br>先去官网下载最新的ISO镜像文件，刻录到U盘，从U盘启动Arch的安装镜像。网上有很多教程，我就不演示了。</p></li><li><p><strong>连接互联网</strong></p><ul><li>如果有网线：输入命令<code>ip link</code>。</li><li>如果没网线就连wifi：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iwctl</span><br><span class="line">station &lt;网卡名&gt; connect &lt;WIFI名&gt;</span><br><span class="line"><span class="comment"># 输入密码</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure></li><li>测试网络连接：<code>ping baidu.com</code></li></ul></li></ol><h2 id="2-开始安装Archlinux"><a href="#2-开始安装Archlinux" class="headerlink" title="2. 开始安装Archlinux"></a>2. 开始安装Archlinux</h2><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><p>详细安装教程可参考<a href="https://wiki.archlinux.org/title/installation_guide">Arch Wiki</a>。</p><ol><li><p><strong>联网</strong></p></li><li><p><strong>检验是否是UEFI64位模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /sys/firmware/efi/fw_platform_size</span><br></pre></td></tr></table></figure></li><li><p><strong>设置时区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure></li><li><p><strong>磁盘分区</strong><br>注意不要把数据格式化了。前五个分区是Windows的分区，Windows有一个EFI分区，可以和Arch共用。为Archlinux准备一个512MB的EFI分区，8G的交换分区，其余空间创建为linux filesystem分区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/nvme0n1 (你的硬盘)</span><br></pre></td></tr></table></figure></li><li><p><strong>格式化分区</strong></p><ul><li>如果你为arch准备了单独的EFI分区<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F 32 /dev/efi_system_partition</span><br></pre></td></tr></table></figure></li><li>格式化交换分区<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /dev/swap_partition</span><br></pre></td></tr></table></figure></li><li>格式化<code>btrfs</code>文件系统<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkfs.btrfs /dev/root_partition -f</span><br><span class="line">mount /dev/root_partition /mnt</span><br><span class="line">btrfs subvolume create /mnt/@</span><br><span class="line">btrfs subvolume create /mnt/@home</span><br><span class="line">umount /dev/root_partition</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>挂载分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/root_partition /mnt -o subvol=@</span><br><span class="line">mount /dev/root_partition /mnt/home -o subvol=@home --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/efi_system_partition /mnt/boot/efi --<span class="built_in">mkdir</span></span><br><span class="line">swapon /dev/swap_partition</span><br></pre></td></tr></table></figure></li><li><p><strong>设置镜像源并安装系统</strong></p><ul><li>编辑<code>/etc/pacman.d/mirrorlist</code>，在开头加上镜像源：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure></li><li>更新并安装系统：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy archlinux-keyring <span class="comment"># 更新密钥</span></span><br><span class="line">pacman -Syy</span><br><span class="line">pacstrap -K /mnt base base-devel linux linux-firmware linux-headers git fish grub efibootmgr os-prober openssl networkmanager dhcpcd neovim</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="3-Arch的基础配置"><a href="#3-Arch的基础配置" class="headerlink" title="3. Arch的基础配置"></a>3. Arch的基础配置</h2><ol><li><p><strong>挂载配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>时间设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure></li><li><p><strong>语言设置</strong></p><ul><li>编辑<code>/etc/locale.gen</code>，取消<code>en_US.UTF-8</code>和<code>zh_CN.UTF-8</code>前的注释</li><li>生成语言包：<code>locale-gen</code></li><li>编辑<code>/etc/locale.conf</code>，写入<code>LANG=en_US.UTF-8</code></li></ul></li><li><p><strong>网络配置</strong></p><ul><li>编辑<code>/etc/hostname</code>，写入你的hostname（任意取名）</li><li>启用网络服务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Initramfs配置</strong></p><ul><li>编辑<code>/etc/mkinitcpio.conf</code>，在<code>HOOKS</code>中加入<code>btrfs</code><br>如果安装时忘记装<code>btrfs</code>，现在装上：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S btrfs-progs</span><br><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Pacman配置</strong></p><ul><li>检查<code>/etc/pacman.d/mirrorlist</code></li><li>编辑<code>/etc/pacman.conf</code>，取消<code>Color</code>和<code>ParallelDownloads</code>前的注释，加上一行<code>ILoveCandy</code>（吃豆人彩蛋）</li><li>更新包数据库：<code>pacman -Syy</code></li></ul></li><li><p><strong>用户配置</strong></p><ul><li>设置root的密码：<code>passwd</code></li><li>添加一个用户：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel &lt;用户名&gt;</span><br><span class="line">passwd &lt;用户名&gt;</span><br></pre></td></tr></table></figure></li><li>为<code>wheel</code>组中的用户添加sudo权限：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvim /etc/sudoers</span><br><span class="line"><span class="comment"># 将108行的注释去掉</span></span><br><span class="line">%wheel ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li>设置用户shell：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su &lt;用户名&gt;</span><br><span class="line">whereis fish</span><br><span class="line">chsh -s /usr/bin/fish</span><br><span class="line"><span class="comment"># Ctrl+D 退出用户登录</span></span><br><span class="line">su &lt;用户名&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>引导配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-install --recheck /dev/你的硬盘</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/default/grub</span><br><span class="line"><span class="comment"># 将最后一行的注释去掉，启用os-prober检测双系统</span></span><br><span class="line"><span class="comment"># 如果之前为Arch创建了单独的EFI，那么现在将windows的EFI分区挂载到任意目录 例如(/mnt)</span></span><br><span class="line"><span class="built_in">sudo</span> os-prober</span><br><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></li><li><p><strong>配置完引导后重启电脑并拔掉U盘</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+D 退出登录</span><br><span class="line">umount -R /mnt</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-重启后配置"><a href="#4-重启后配置" class="headerlink" title="4. 重启后配置"></a>4. 重启后配置</h2><ol><li><p><strong>连接互联网</strong><br>如果有网线跳过这一步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device wifi connect &lt;网络名&gt; &lt;密码&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>安装Nvidia驱动</strong></p><ul><li>查看显卡：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci -k | grep -A 2 -E <span class="string">&quot;(VGA|3D)&quot;</span></span><br></pre></td></tr></table></figure></li><li>安装驱动：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvidia nvidia-utils nvidia-settings</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/default/grub</span><br><span class="line"><span class="comment"># 在GRUB_CMDLINE_LINUX中添加nvidia_drm.modeset=1</span></span><br><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/mkinitcpio.conf</span><br><span class="line"><span class="comment"># 在MODULES中加入nvidia nvidia_modeset nvidia_uvm nvidia_drm</span></span><br><span class="line"><span class="comment"># 将kms从HOOKS中去掉</span></span><br><span class="line"><span class="built_in">sudo</span> mkinitcpio -P</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li>验证是否安装成功：<code>nvidia-smi</code></li><li>在/etc/pacman.d/hooks/nvidia.hook中配置Nvidia更新钩子：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Trigger]</span></span><br><span class="line"><span class="attr">Operation</span>=Install</span><br><span class="line"><span class="attr">Operation</span>=Upgrade</span><br><span class="line"><span class="attr">Operation</span>=Remove</span><br><span class="line"><span class="attr">Type</span>=Package</span><br><span class="line"><span class="attr">Target</span>=nvidia</span><br><span class="line"><span class="attr">Target</span>=linux</span><br><span class="line"><span class="comment"># Change the linux part above if a different kernel is used</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Action]</span></span><br><span class="line"><span class="attr">Description</span>=Update NVIDIA module in initcpio</span><br><span class="line"><span class="attr">Depends</span>=mkinitcpio</span><br><span class="line"><span class="attr">When</span>=PostTransaction</span><br><span class="line">NeedsTargets</span><br><span class="line"><span class="attr">Exec</span>=/bin/sh -c <span class="string">&#x27;while read -r trg; do case $trg in linux*) exit 0; esac; done; /usr/bin/mkinitcpio -P&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><p>安装Hyprland桌面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S hyprland kitty waybar</span><br><span class="line"><span class="built_in">sudo</span> pacman -S sddm</span><br><span class="line"><span class="built_in">sudo</span> pacman -S ttf-jetbrains-mono-nerd adobe-source-han-sans-cn-fonts adobe-source-code-pro-fonts</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><h2 id="5-安装timeshift进行初始备份"><a href="#5-安装timeshift进行初始备份" class="headerlink" title="5.安装timeshift进行初始备份"></a>5.安装timeshift进行初始备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">paru -S timeshift-systemd-timer grub-btrfs xorg-xhost <span class="comment">#安装timeshift</span></span><br><span class="line"><span class="built_in">sudo</span> SYSTEMD_EDITOR=vim systemctl edit --full grub-btrfsd</span><br><span class="line">替换 grub-btrfsd --syslog /.snapshots 为 grub-btrfsd --syslog -t</span><br><span class="line"><span class="built_in">sudo</span> timeshift --create --comments <span class="string">&quot;staring point&quot;</span> <span class="comment">#创建备份</span></span><br><span class="line"><span class="built_in">sudo</span> timeshift --list <span class="comment">#查看备份列表</span></span><br><span class="line"><span class="built_in">sudo</span> timeshift --restore --snapshot <span class="string">&quot;SNAPSHOT_NAME&quot;</span> <span class="comment">#还原快照</span></span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><p>等待重启后，输入用户密码进入Hyprland。</p><h3 id="Nvidia设置"><a href="#Nvidia设置" class="headerlink" title="Nvidia设置"></a>Nvidia设置</h3><ul><li>参考<a href="https://wiki.hyprland.org/Nvidia/">Nvidia设置指南</a></li><li>进入tty3并登录用户：<code>CTRL+ALT+F3</code></li><li>编辑<code>~/.config/hypr/hyprland.conf</code>，添加NVIDIA环境变量：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">env = LIBVA_DRIVER_NAME,nvidia</span><br><span class="line">env = XDG_SESSION_TYPE,wayland</span><br><span class="line">env = GBM_BACKEND,nvidia-drm</span><br><span class="line">env = __GLX_VENDOR_LIBRARY_NAME,nvidia</span><br><span class="line">env = WLR_NO_HARDWARE_CURSORS,1</span><br></pre></td></tr></table></figure></li><li>重启后进入Hyprland，常用快捷键：<ul><li>Win+Q 开启终端</li><li>Win+C 关闭窗口</li><li>Win+R 呼出菜单</li><li>Win+数字 切换桌面</li></ul></li></ul><ul><li>Win+Shift+数字 将当前窗口移动到对应工作区</li><li>Win+鼠标左键 拖动窗口</li><li>Win+鼠标右键 调整窗口大小</li><li>Win+V 让窗口浮动出来</li></ul><h2 id="6-其他软件安装与配置"><a href="#6-其他软件安装与配置" class="headerlink" title="6. 其他软件安装与配置"></a>6. 其他软件安装与配置</h2><ol><li><p><strong>安装输入法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5 fcitx5-chinese-addons fcitx5-configtool</span><br></pre></td></tr></table></figure></li><li><p><strong>安装<code>paru</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/paru.git</span><br><span class="line"><span class="built_in">cd</span> paru</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure></li><li><p><strong>安装其他软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S rofi</span><br><span class="line">paru -S google-chrome</span><br><span class="line"><span class="built_in">sudo</span> pacman -S code</span><br></pre></td></tr></table></figure></li><li><p><strong>配置</strong></p><ul><li>获取我的配置文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HeaoYe/config</span><br><span class="line"><span class="built_in">cd</span> config</span><br></pre></td></tr></table></figure></li><li>配置neovim：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> nvim ~/.config/ -r</span><br></pre></td></tr></table></figure></li><li>配置chrome和vscode：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> *.conf ~/.config/</span><br><span class="line">code</span><br><span class="line"><span class="comment"># 安装插件：clangd CMake CmakeTools CodeLLDB GruvboxTheme</span></span><br><span class="line"><span class="built_in">cp</span> settings.json ~/.config/Code\ -\ OSS/User/</span><br></pre></td></tr></table></figure></li><li>配置kitty：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> kitty ~/.config/ -r</span><br><span class="line"><span class="comment"># 在~/.config/kitty/kitty.conf 中设置字体大小</span></span><br></pre></td></tr></table></figure></li><li>配置hyprland：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S xorg-xrdb</span><br><span class="line"><span class="built_in">cp</span> hypr ~/.config/ -r</span><br></pre></td></tr></table></figure></li><li>配置waybar：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> waybar ~/.config/ -r</span><br><span class="line"><span class="comment"># 手动启动waybar查看效果</span></span><br><span class="line">waybar -c ~/.config/waybar/Waybar-3.0/config -s ~/.config/waybar/Waybar-3.0/style.css</span><br></pre></td></tr></table></figure></li><li>配置声音：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S pavucontrol-qt</span><br><span class="line">pavucontrol-qt</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>可选软件安装</strong></p><ul><li><code>nvtop</code>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvtop</span><br></pre></td></tr></table></figure></li><li><code>grim</code>截图软件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S grim</span><br></pre></td></tr></table></figure></li><li>QQ音乐：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paru -S qqmusic-bin\</span><br></pre></td></tr></table></figure></li><li>大鹅：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paru -S daed-git</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，Archlinux的配置完成。Hyprland和waybar以及kitty的配置文件是从他人处clone的，相关链接请查看简介。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天演示Archlinux的安装与配置&quot;&gt;&lt;a href=&quot;#今天演示Archlinux的安装与配置&quot; class=&quot;headerlink&quot; title=&quot;今天演示Archlinux的安装与配置&quot;&gt;&lt;/a&gt;今天演示Archlinux的安装与配置&lt;/h1&gt;&lt;p&gt;我打</summary>
      
    
    
    
    
    <category term="linux" scheme="https://lonerorz.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lonerorz.github.io/posts/4a17b156.html"/>
    <id>https://lonerorz.github.io/posts/4a17b156.html</id>
    <published>2025-03-29T16:00:00.000Z</published>
    <updated>2025-03-31T19:21:18.856Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":"","title":""}]</div>  </div><h3 id="测试外挂标签"><a href="#测试外挂标签" class="headerlink" title="测试外挂标签"></a>测试外挂标签</h3><div class="note danger simple"><p>danger 提示块标签</p></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="linux" scheme="https://lonerorz.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>配置venv环境</title>
    <link href="https://lonerorz.github.io/posts/fe39.html"/>
    <id>https://lonerorz.github.io/posts/fe39.html</id>
    <published>2025-03-02T16:00:00.000Z</published>
    <updated>2025-03-31T20:58:47.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应用venv环境"><a href="#应用venv环境" class="headerlink" title="应用venv环境"></a>应用<strong>venv</strong>环境</h1><p>以下是针对 <strong>Fish shell</strong> 的具体步骤：</p><h3 id="1-创建虚拟环境"><a href="#1-创建虚拟环境" class="headerlink" title="1. 创建虚拟环境"></a>1. <strong>创建虚拟环境</strong></h3><p>在你的项目目录中创建一个虚拟环境，和在其他 shell 中一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv venv</span><br></pre></td></tr></table></figure><p>这将创建一个名为 <code>venv</code> 的目录，里面包含 Python 解释器和必要的标准库。</p><h3 id="2-激活虚拟环境-Fish-shell"><a href="#2-激活虚拟环境-Fish-shell" class="headerlink" title="2. 激活虚拟环境 (Fish shell)"></a>2. <strong>激活虚拟环境 (Fish shell)</strong></h3><p>在 <strong>Fish shell</strong> 中，激活虚拟环境的命令稍有不同。你需要运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate.fish</span><br></pre></td></tr></table></figure><p>这会激活虚拟环境，命令行提示符会显示 <code>(venv)</code>，表示当前正在使用该虚拟环境。</p><h3 id="3-安装依赖"><a href="#3-安装依赖" class="headerlink" title="3. 安装依赖"></a>3. <strong>安装依赖</strong></h3><p>激活虚拟环境后，你可以使用 <code>pip</code> 来安装项目依赖。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h3 id="4-创建-requirements-txt"><a href="#4-创建-requirements-txt" class="headerlink" title="4. 创建 requirements.txt"></a>4. <strong>创建 <code>requirements.txt</code></strong></h3><p>安装好需要的依赖后，可以将当前虚拟环境中的所有安装包列出并写入 <code>requirements.txt</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h3 id="5-退出虚拟环境"><a href="#5-退出虚拟环境" class="headerlink" title="5. 退出虚拟环境"></a>5. <strong>退出虚拟环境</strong></h3><p>当你完成工作并希望退出虚拟环境时，在 <strong>Fish shell</strong> 中，你可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><p>这会退出虚拟环境并返回到系统的默认 Python 环境。</p><h3 id="6-重新激活虚拟环境"><a href="#6-重新激活虚拟环境" class="headerlink" title="6. 重新激活虚拟环境"></a>6. <strong>重新激活虚拟环境</strong></h3><p>如果你以后想重新进入虚拟环境，只需再次运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate.fish</span><br></pre></td></tr></table></figure><h3 id="7-删除虚拟环境"><a href="#7-删除虚拟环境" class="headerlink" title="7. 删除虚拟环境"></a>7. <strong>删除虚拟环境</strong></h3><p>如果你不再需要虚拟环境，可以直接删除 <code>venv</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf venv</span><br></pre></td></tr></table></figure><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在 <strong>Fish shell</strong> 中，激活虚拟环境的命令是 <code>source venv/bin/activate.fish</code>，而退出虚拟环境的命令与其他 shell 中相同，都是 <code>deactivate</code>。其他操作与标准的虚拟环境使用方法保持一致。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;应用venv环境&quot;&gt;&lt;a href=&quot;#应用venv环境&quot; class=&quot;headerlink&quot; title=&quot;应用venv环境&quot;&gt;&lt;/a&gt;应用&lt;strong&gt;venv&lt;/strong&gt;环境&lt;/h1&gt;&lt;p&gt;以下是针对 &lt;strong&gt;Fish shell&lt;/str</summary>
      
    
    
    
    
    <category term="python" scheme="https://lonerorz.github.io/tags/python/"/>
    
  </entry>
  
</feed>

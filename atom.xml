<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>loner`s Blog</title>
  <icon>https://www.gravatar.com/avatar/20ee0b9978899e0f60f986538334c375</icon>
  <subtitle>lonerOrz</subtitle>
  <link href="https://lonerorz.github.io/atom.xml" rel="self"/>
  
  <link href="https://lonerorz.github.io/"/>
  <updated>2025-08-02T09:29:48.899Z</updated>
  <id>https://lonerorz.github.io/</id>
  
  <author>
    <name>loner</name>
    <email>2788892716@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装NixOS</title>
    <link href="https://lonerorz.github.io/posts/0.html"/>
    <id>https://lonerorz.github.io/posts/0.html</id>
    <published>2025-08-02T09:25:33.736Z</published>
    <updated>2025-08-02T09:29:48.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-获取NixOS"><a href="#1-获取NixOS" class="headerlink" title="1. 获取NixOS"></a>1. 获取NixOS</h1><p>NixOS的ISO镜像文件可以从<a href="offical">https://nixos.org/download.html#nixos-iso</a>处下载，<br>考虑到国内互联网现状，也可从<a href="清华大学开源镜像站">https://mirrors.tuna.tsinghua.edu.cn/nixos-images/</a>下载，<br>请注意版本号的差别。制作USB启动盘的方式很常规（Tip:推荐使用Ventory），详细的不再赘述。</p><p>注意：务必保证自己已经理解自己下载的是什么玩意，不然可能无法进行下一步或者进行到某一步便前功尽弃。</p><p>请注意，[latest-nixos]表示你下载的是最新的NixOS版本，[gnome]和[plasma5]分别表示你的livecd默认带有Gnome桌面和KDE桌面的版本（这只决定你的livecd默认的桌面环境，和新的系统无关），而[minimal]则表示是最小化安装版本，livecd没有桌面环境。</p><p>对于32位(i686)计算机，NixOS在这里仅提供最小化安装版本，如果你的计算机支持64位的操作系统，那么请下载x86_64的版本。</p><p>后缀为sha256的文件为校验文件，可以检查下载下来的镜像文件是否完整，一般情况来说，没有必要理会它们。</p><p>如果你使用不支持从USB设备启动的古老机器，你可以尝试将ISO镜像文件烧录入一张空的CD里来替代USB设备，但是NixOS可能并不能在这种古老机器上正常工作。</p><h1 id="2-安装NixOS"><a href="#2-安装NixOS" class="headerlink" title="2. 安装NixOS"></a>2. 安装NixOS</h1><p><strong>2.1 从安装介质中启动</strong></p><p>Step 1. 插入你的安装介质，打开或者重启你的计算机。</p><p>Step 2. 通过按某些按键来进入BIOS的启动菜单(BOOT MENU)（Tip:不同的主板默认的按键可能不同），选择刻录好的安装介质，如果你不知道你的哪个是你的安装介质，那就一个一个地试。（Tip:如果你的PC支持UEFI，那么选择UEFI是更好的选择，如果你不知道什么是UEFI或者机器比较古老，那么可以忽略这一括号内的话）</p><p>Step 3. 选完启动介质后来到安装器菜单界面，如果你不懂，可以什么都不做乖巧地等着读秒结束后自动进入，如果你比较心急，按一下回车键就可以直接进入。</p><p>Step 4. 此时如果你在下载镜像时选择了带有桌面环境的版本，当你选择图形化(graphical)的安装器时可能需要等待一段时间才可进入桌面，安装过程见<strong>2.2</strong>。最小化安装版本会直接进入命令行，你接下来的所有操作都要在命令行下完成，安装过程见<strong>2.3</strong>。</p><p>**2.2 图形化安装（自动）</p><p>Step 1. 在欢迎界面，可以选择安装器和将要安装的系统的语言。（为了方便，最好使用American English）</p><p>Step 2. 接下来，你应该选择你所在的地区以便正确设置你的时区，安装器会通过你的ip地址猜测你的位置，当然，你也可以点击地图选择地区。</p><p>Step 3. 接下来，你可以选择你的键盘布局，默认即可。</p><p>Step 4. 在用户界面，你必须设置一个普通用户的名和密，还有root用户的密码。</p><p>Step 5. 接下来，你可以选择一个你喜欢的桌面环境来做为新的系统的默认桌面环境，你有相当多的选择，或者你可以选择无桌面环境，值得一提的是，无论你选择了怎样的系统镜像，你都可以在这里重新决定你新系统的默认桌面环境。</p><p>Step 6. 接下来，你可以选择是否允许非自由的软件。</p><p>Step 7. 接下来是硬盘分区界面，<strong>谨慎操作</strong>，最简单的方法就是直接格式化整个硬盘当作NixOS的家，理所当然地你也可以手动分区，至少有一个根目录和ESP分区。（如果你是UEFI启动的话）如果你需要的话不要忘了swap分区，你也可以选择加密硬盘。</p><p>Step 8. 总结界面，在这可以检查一下你之前的选项是否有问题，没有问题，点击Install，nixos-install会为你做完一切。</p><p>Step 9. 安装结束后，重启并移除你的安装介质。</p><p><strong>2.3 命令行安装（手动）</strong></p><p>先切换到root用户，接下来的操作都在root下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></table></figure><p><strong>2.3.1 连接网络</strong></p><p>如果你需要连接WiFi，首先，打开wpa_supplicant服务，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start wpa_supplicant</span><br></pre></td></tr></table></figure><p>接下来，执行wpa_cli：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpa_cli</span><br></pre></td></tr></table></figure><p>接着，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">add_network</span></span><br><span class="line">0</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">set_network 0 ssid <span class="string">&quot;myhomenetwork&quot;</span></span></span><br><span class="line">OK</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">set_network 0 psk <span class="string">&quot;mypassword&quot;</span></span></span><br><span class="line">OK</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">set_network 0 key_mgmt WPA-PSK</span></span><br><span class="line">OK</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">enable_network 0</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>进入wpa_cli，其中myhomenetwork是你要连接的WiFi的SSID，mypassword是你要连接的WiFI的密钥，WPA-PSK是你要连接的WiFi的加密方式。</p><p>如果你成功连接，执行完如上的命令后你将得到类似下面的一条message：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;3&gt;CTRL-EVENT-CONNECTED - Connection to 32:85:ab:ef:24:5c completed [id=0 id_str=]</span><br></pre></td></tr></table></figure><p>这个时候你就可以通过quit命令来退出wpa_cli。</p><p><strong>2.3.2 分区并格式化</strong></p><p>我打算采用btrfs文件系统，<strong>btrfs</strong> 是用于 Linux 的现代写入复制 （CoW） 文件系统，旨在实现高级功能，同时还专注于容错、修复和易于管理。</p><p><strong>注意：</strong> 以下示例适用于启用了 EFI 的系统。相应地调整 BIOS 安装的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf &quot;label: gpt\n,550M,U\n,+8G,S\n,,L\n&quot; | sfdisk /dev/sda</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用上面命令创建的分区结构：</strong></p><ol><li><code>/dev/sda1</code>: 550M 的 EFI 分区。</li><li><code>/dev/sda2</code>: 8G 的 <code>Linux swap</code> 分区。</li><li><code>/dev/sda3</code>: 剩余空间的 <code>Linux filesystem</code> 分区。</li></ol><p>然后格式化并启用 <code>swap</code> 分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkswap /dev/sda2</span><br><span class="line">swapon /dev/sda2</span><br></pre></td></tr></table></figure><p>最后，更新 <code>/etc/fstab</code> 文件以确保 <code>swap</code> 在重启时自动启用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;/dev/sda2 none swap sw 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在Nix 包管理器的系统中临时使用 <code>btrfs-progs</code> 软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nix-shell -p btrfs-progs</span><br></pre></td></tr></table></figure><p><strong>格式化分区并创建子卷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F 32 /dev/sda1  <span class="comment">#在指定的分区 `/dev/sda1` 上创建一个 FAT32 文件系统</span></span><br><span class="line">mkfs.btrfs /dev/sda3  <span class="comment">#在指定的分区 `/dev/sda3` 上创建一个 Btrfs 文件系统</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt  <span class="comment">#创建一个挂载点 `/mnt`</span></span><br><span class="line">mount /dev/sda3 /mnt  <span class="comment">#将 `/dev/sda3` 分区挂载到 `/mnt` 目录</span></span><br><span class="line">btrfs subvolume create /mnt/@  <span class="comment">#在 `/mnt` 目录中创建一个名为 `@` 的 Btrfs 子卷,对应于系统的根文件系统（`/`）</span></span><br><span class="line">btrfs subvolume create /mnt/@home  <span class="comment">#在 `/mnt` 目录中创建一个名为 `@home` 的子卷,对应于 `/home` 目录，存放用户的个人数据</span></span><br><span class="line">btrfs subvolume create /mnt/@nix  <span class="comment">#在 `/mnt` 目录中创建一个名为 `@nix` 的子卷,对应于 Nix 包管理器的存储位置</span></span><br><span class="line">umount /mnt <span class="comment">#卸载 `/mnt` 目录下的文件系统</span></span><br></pre></td></tr></table></figure><p><strong>挂载分区和子卷</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mount -o compress=zstd,subvol=@ /dev/sda3 /mnt  #将 Btrfs 分区中的 `@` 子卷挂载到 `/mnt` 目录，并启用压缩。</span><br><span class="line">mkdir /mnt/&#123;home,nix&#125;  #创建两个目录 `/mnt/home` 和 `/mnt/nix`</span><br><span class="line">mount -o compress=zstd,subvol=@home /dev/sda3 /mnt/home  #将 Btrfs 分区中的 `@home` 子卷挂载到 `/mnt/home`，并启用 Zstandard 压缩</span><br><span class="line">mount -o compress=zstd,noatime,subvol=@nix /dev/sda3 /mnt/nix  #将 Btrfs 分区中的 `@nix` 子卷挂载到 `/mnt/nix`，并启用 Zstandard 压缩，同时禁用访问时间记录</span><br><span class="line"></span><br><span class="line">mkdir /mnt/boot  #创建 `boot` 目录，用于挂载引导分区</span><br><span class="line">mount /dev/sda1 /mnt/boot  #挂载引导分区</span><br></pre></td></tr></table></figure><p><strong>安装NixOS</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nixos-generate-config --root /mnt</span><br><span class="line">nano /mnt/etc/nixos/configuration.nix # manually add mount options</span><br><span class="line">nano /mnt/etc/nixos/hardware-configuration.nix #添加一些挂在参数 比如 &quot;compress=zstd&quot; 和 &quot;noatime&quot;</span><br><span class="line">nixos-install --show-trace</span><br></pre></td></tr></table></figure><p>重置root密码，添加新用户并设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nixos-enter  # 进入部署好的系统，类似 arch 的 chroot</span><br><span class="line">passwd root  # 重置 root 密码</span><br><span class="line">useradd -m -G wheel loner  # 添加普通用户，并加入 wheel 组</span><br><span class="line">passwd loner  # 设置普通账户密码</span><br></pre></td></tr></table></figure><p><code>nixos-install</code> 有时候有毒，最后一步的设置密码不生效，所以才会有上面重置 root 密码这步。<br>然后重启（最好断掉虚拟机的光驱），就能看到安装好的系统了!!!</p><p>刷新grub</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>如果以后你决定删除 <strong>NixOS</strong> 系统，你需要做几个步骤来确保系统干净地卸载，并恢复到之前的状态。以下是逐步指南：</p><h3 id="1-删除-NixOS-文件系统"><a href="#1-删除-NixOS-文件系统" class="headerlink" title="1. 删除 NixOS 文件系统"></a>1. <strong>删除 NixOS 文件系统</strong></h3><p>首先，你需要删除 <strong>NixOS</strong> 的文件系统和挂载的分区。假设你的 <strong>NixOS</strong> 系统安装在 <code>/dev/nvme0n1p7</code>（BTRFS 文件系统）上，并且你的 <code>@</code>、<code>@home</code> 和 <code>@nix</code> 等子卷已经创建。你可以按照以下步骤删除这些分区和子卷：</p><h4 id="1-1-删除-NixOS-的-BTRFS-子卷"><a href="#1-1-删除-NixOS-的-BTRFS-子卷" class="headerlink" title="1.1. 删除 NixOS 的 BTRFS 子卷"></a>1.1. 删除 NixOS 的 BTRFS 子卷</h4><p>在你删除整个分区之前，首先需要卸载并删除所有的 BTRFS 子卷。你已经在安装过程中创建了几个子卷（例如：<code>@</code>、<code>@home</code>、<code>@nix</code>），可以使用以下命令删除它们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除 BTRFS 子卷</span></span><br><span class="line"><span class="built_in">sudo</span> btrfs subvolume delete /mnt/@</span><br><span class="line"><span class="built_in">sudo</span> btrfs subvolume delete /mnt/@home</span><br><span class="line"><span class="built_in">sudo</span> btrfs subvolume delete /mnt/@nix</span><br></pre></td></tr></table></figure><h4 id="1-2-卸载分区"><a href="#1-2-卸载分区" class="headerlink" title="1.2. 卸载分区"></a>1.2. 卸载分区</h4><p>确保分区不再挂载，如果你已经挂载了 <strong>NixOS</strong> 的分区（比如 <code>/mnt</code>、<code>/mnt/home</code>、<code>/mnt/nix</code>），可以使用以下命令卸载它们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载挂载点</span></span><br><span class="line"><span class="built_in">sudo</span> umount /mnt</span><br><span class="line"><span class="built_in">sudo</span> umount /mnt/home</span><br><span class="line"><span class="built_in">sudo</span> umount /mnt/nix</span><br></pre></td></tr></table></figure><h4 id="1-3-删除-NixOS-分区"><a href="#1-3-删除-NixOS-分区" class="headerlink" title="1.3. 删除 NixOS 分区"></a>1.3. 删除 NixOS 分区</h4><p>删除分区的步骤可以通过 <strong>parted</strong> 或 <strong>fdisk</strong> 工具来实现。使用 <strong>parted</strong> 删除 <strong>NixOS</strong> 分区（例如：<code>/dev/nvme0n1p7</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 parted 删除分区</span></span><br><span class="line"><span class="built_in">sudo</span> parted /dev/nvme0n1 <span class="built_in">rm</span> 7</span><br></pre></td></tr></table></figure><p>这会删除 <code>/dev/nvme0n1p7</code> 分区。如果你需要删除其他 <strong>NixOS</strong> 使用的分区，也可以按照类似方式删除。</p><h3 id="2-删除引导项"><a href="#2-删除引导项" class="headerlink" title="2. 删除引导项"></a>2. <strong>删除引导项</strong></h3><p>如果你使用的是 <strong>systemd-boot</strong>，需要删除与 <strong>NixOS</strong> 相关的启动项。你可以使用以下命令列出所有 <strong>systemd-boot</strong> 启动项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootctl list</span><br></pre></td></tr></table></figure><p>然后删除 <strong>NixOS</strong> 的启动项。启动项配置文件通常位于 <code>/boot/efi/loader/entries</code> 目录下。你可以使用以下命令删除 <strong>NixOS</strong> 的引导配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除 NixOS 启动项</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /boot/efi/loader/entries/nixos-generation-1.conf</span><br></pre></td></tr></table></figure><p>如果你使用的是 <strong>GRUB</strong>，你需要编辑 <code>/etc/grub.d/</code> 中的配置文件，删除与 <strong>NixOS</strong> 相关的条目，然后重新生成 <strong>GRUB</strong> 配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除 GRUB 配置中的 NixOS 条目</span></span><br><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="3-清理-NixOS-配置文件"><a href="#3-清理-NixOS-配置文件" class="headerlink" title="3. 清理 NixOS 配置文件"></a>3. <strong>清理 NixOS 配置文件</strong></h3><p>如果你不再使用 <strong>NixOS</strong>，你可以删除 <strong>NixOS</strong> 的配置文件（例如：<code>/etc/nixos/configuration.nix</code> 等）。这些文件可能包含你对 <strong>NixOS</strong> 的自定义配置。你可以删除 <code>/etc/nixos</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除 NixOS 配置文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /etc/nixos</span><br></pre></td></tr></table></figure><h3 id="4-恢复引导顺序"><a href="#4-恢复引导顺序" class="headerlink" title="4. 恢复引导顺序"></a>4. <strong>恢复引导顺序</strong></h3><p>删除 <strong>NixOS</strong> 后，你可能需要更新 <strong>UEFI</strong> 或 <strong>BIOS</strong> 启动顺序，确保系统从其他操作系统（如 <strong>Windows</strong> 或 <strong>Arch Linux</strong>）启动。你可以通过进入 <strong>UEFI/BIOS</strong> 设置，在启动顺序中选择合适的引导项。</p><p>如果你删除了 <strong>systemd-boot</strong> 或 <strong>GRUB</strong> 引导配置，你可能需要重新配置它们。假设 <strong>GRUB</strong> 在其他操作系统中仍然可用，可以重新生成 <strong>GRUB</strong> 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="5-删除-swap-分区（如果需要）"><a href="#5-删除-swap-分区（如果需要）" class="headerlink" title="5. 删除 swap 分区（如果需要）"></a>5. <strong>删除 swap 分区（如果需要）</strong></h3><p>如果你不再使用 <strong>swap</strong> 分区 <code>/dev/nvme0n1p5</code>，可以通过以下步骤删除它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 parted 删除 swap 分区</span></span><br><span class="line"><span class="built_in">sudo</span> parted /dev/nvme0n1 <span class="built_in">rm</span> 5</span><br></pre></td></tr></table></figure><h3 id="6-清理多余的文件"><a href="#6-清理多余的文件" class="headerlink" title="6. 清理多余的文件"></a>6. <strong>清理多余的文件</strong></h3><p>如果你不再需要 <strong>NixOS</strong> 安装的任何文件或配置，最后可以清理掉其他不再需要的文件，包括下载的镜像和相关的日志文件。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol><li>删除 <strong>NixOS</strong> 分区：卸载并删除 BTRFS 子卷和相关分区。</li><li>删除引导项：清理 <strong>systemd-boot</strong> 或 <strong>GRUB</strong> 配置中的 <strong>NixOS</strong> 启动项。</li><li>清理配置文件：删除 <code>/etc/nixos</code> 配置目录。</li><li>恢复引导顺序：确保系统从其他操作系统启动。</li><li>删除 <strong>swap</strong> 分区（如果不再需要）。</li></ol><p>完成这些步骤后，<strong>NixOS</strong> 将被从系统中完全移除。如果你有任何问题，或者在操作过程中遇到困难，随时向我求助！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-获取NixOS&quot;&gt;&lt;a href=&quot;#1-获取NixOS&quot; class=&quot;headerlink&quot; title=&quot;1. 获取NixOS&quot;&gt;&lt;/a&gt;1. 获取NixOS&lt;/h1&gt;&lt;p&gt;NixOS的ISO镜像文件可以从&lt;a href=&quot;offical&quot;&gt;https:</summary>
      
    
    
    
    
    <category term="linux" scheme="https://lonerorz.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hyprlan 游戏优化</title>
    <link href="https://lonerorz.github.io/posts/be11.html"/>
    <id>https://lonerorz.github.io/posts/be11.html</id>
    <published>2025-03-31T22:14:26.377Z</published>
    <updated>2025-04-04T12:26:49.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🎮-Hyprland-游戏优化（Wayland-专用）"><a href="#🎮-Hyprland-游戏优化（Wayland-专用）" class="headerlink" title="🎮 Hyprland + 游戏优化（Wayland 专用）"></a><strong>🎮 Hyprland + 游戏优化（Wayland 专用）</strong></h1><h2 id="🔹-1-启用-gamescope（适用于-Wayland）"><a href="#🔹-1-启用-gamescope（适用于-Wayland）" class="headerlink" title="🔹 1. 启用 gamescope（适用于 Wayland）"></a><strong>🔹 1. 启用 <code>gamescope</code>（适用于 Wayland）</strong></h2><p>Hyprland <strong>默认使用 Wayland</strong>，你可以使用 <strong><code>gamescope</code></strong> 作为 <strong>游戏模式</strong> 以优化性能。</p><h3 id="📌-安装-gamescope"><a href="#📌-安装-gamescope" class="headerlink" title="📌 安装 gamescope"></a><strong>📌 安装 <code>gamescope</code></strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S gamescope</span><br></pre></td></tr></table></figure><h3 id="📌-启动方式"><a href="#📌-启动方式" class="headerlink" title="📌 启动方式"></a><strong>📌 启动方式</strong></h3><p>在 <strong>Steam 启动参数</strong>里添加：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gamescope -W 1920 -H 1080 -r 144 -f -- %command%</span><br></pre></td></tr></table></figure><br><strong>参数说明：</strong></p><ul><li><code>-W 1920 -H 1080</code> → 设定游戏窗口大小（可调）</li><li><code>-r 60</code> → 设定刷新率（换成你的显示器刷新率）</li><li><code>-f</code> → 强制全屏</li><li><code>-- %command%</code> → 运行 Steam 游戏</li></ul><hr><h2 id="🔹-2-gamemode（游戏模式）"><a href="#🔹-2-gamemode（游戏模式）" class="headerlink" title="🔹 2. gamemode（游戏模式）"></a><strong>🔹 2. <code>gamemode</code>（游戏模式）</strong></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S gamemode</span><br></pre></td></tr></table></figure><p>然后在 Steam 游戏 <strong>启动参数</strong>加：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gamemoderun %command%</span><br></pre></td></tr></table></figure><br>这样游戏时，系统会 <strong>自动调整 CPU 频率，减少后台进程占用</strong>。</p><hr><h2 id="🔹-3-确保-NVIDIA-AMD-驱动正确安装"><a href="#🔹-3-确保-NVIDIA-AMD-驱动正确安装" class="headerlink" title="🔹 3. 确保 NVIDIA/AMD 驱动正确安装"></a><strong>🔹 3. 确保 </strong>NVIDIA/AMD<strong> 驱动正确安装</strong></h2><p><strong>📌 NVIDIA 用户（Wayland）</strong><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvidia nvidia-utils nvidia-dkms</span><br></pre></td></tr></table></figure><br>然后修改 <strong><code>/etc/environment</code></strong>：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;WLR_NO_HARDWARE_CURSORS=1&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> -a /etc/environment</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LIBVA_DRIVER_NAME=nvidia&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> -a /etc/environment</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;GBM_BACKEND=nvidia-drm&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> -a /etc/environment</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;__GLX_VENDOR_LIBRARY_NAME=nvidia&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> -a /etc/environment</span><br></pre></td></tr></table></figure><br>然后重启！</p><p><strong>📌 AMD 用户</strong><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S mesa mesa-utils vulkan-radeon lib32-mesa lib32-vulkan-radeon</span><br></pre></td></tr></table></figure></p><hr><h2 id="🔹-4-Hyprland-相关优化"><a href="#🔹-4-Hyprland-相关优化" class="headerlink" title="🔹 4. Hyprland 相关优化"></a><strong>🔹 4. Hyprland 相关优化</strong></h2><h3 id="📌-限制-Hyprland-的-damage-tracking"><a href="#📌-限制-Hyprland-的-damage-tracking" class="headerlink" title="📌 限制 Hyprland 的 damage tracking"></a><strong>📌 限制 <code>Hyprland</code> 的 <code>damage tracking</code></strong></h3><p>打开 Hyprland 配置：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.config/hypr/hyprland.conf</span><br></pre></td></tr></table></figure><br><strong>找到：</strong><br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use auto or full for better performance</span></span><br><span class="line"><span class="attr">damage_tracking</span> = full</span><br></pre></td></tr></table></figure><br><strong>改成</strong><br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">damage_tracking</span> = full</span><br></pre></td></tr></table></figure><br>然后重启 Hyprland：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hyprctl reload</span><br></pre></td></tr></table></figure><br>这样可以 <strong>减少不必要的屏幕重绘</strong>，提升游戏性能。</p><hr><h2 id="🔹-5-关闭-vsync，减少延迟"><a href="#🔹-5-关闭-vsync，减少延迟" class="headerlink" title="🔹 5. 关闭 vsync，减少延迟"></a><strong>🔹 5. 关闭 <code>vsync</code>，减少延迟</strong></h2><p>Hyprland 默认可能启用了 <code>vsync</code>，你可以关闭它以减少输入延迟：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 Hyprland 配置文件里（~/.config/hypr/hyprland.conf）</span></span><br><span class="line"><span class="attr">env</span> = WLR_NO_VSYNC,<span class="number">1</span></span><br></pre></td></tr></table></figure><br>然后重启 Hyprland：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hyprctl reload</span><br></pre></td></tr></table></figure></p><hr><h2 id="🔹-6-使用-MangoHud（Wayland-版）"><a href="#🔹-6-使用-MangoHud（Wayland-版）" class="headerlink" title="🔹 6. 使用 MangoHud（Wayland 版）"></a><strong>🔹 6. 使用 <code>MangoHud</code>（Wayland 版）</strong></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S mangohud</span><br></pre></td></tr></table></figure><p>然后 <strong>运行游戏</strong> 时：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MANGOHUD=1 %command%</span><br></pre></td></tr></table></figure><br>这样可以 <strong>实时显示 FPS、温度、GPU 占用</strong>。</p><hr><h2 id="🔹-7-使用-fsync-esync（适用于-Proton-游戏）"><a href="#🔹-7-使用-fsync-esync（适用于-Proton-游戏）" class="headerlink" title="🔹 7. 使用 fsync / esync（适用于 Proton 游戏）"></a><strong>🔹 7. 使用 <code>fsync</code> / <code>esync</code>（适用于 Proton 游戏）</strong></h2><p>如果你在 Steam 运行 <strong>Windows 游戏</strong>（Proton），建议开启 <code>fsync</code>：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WINEFSYNC=1 %<span class="built_in">command</span>%</span><br></pre></td></tr></table></figure><br><strong>📌 <code>fsync</code> 适用于：</strong></p><ul><li><strong>Wine / Proton 游戏</strong></li><li><strong>大型开放世界游戏</strong></li><li><strong>减少卡顿，提高帧率</strong></li></ul><hr><h2 id="🔹-8-启用-mesa-git（AMD-用户专属）"><a href="#🔹-8-启用-mesa-git（AMD-用户专属）" class="headerlink" title="🔹 8. 启用 mesa-git（AMD 用户专属）"></a><strong>🔹 8. 启用 <code>mesa-git</code>（AMD 用户专属）</strong></h2><p>如果你是 <strong>AMD 显卡</strong>：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S mesa-git</span><br></pre></td></tr></table></figure><br>这样可以获得最新的 <strong>Vulkan 驱动</strong>，提升游戏性能！</p><hr><h2 id="🔹-9-轻量化系统（减少后台占用）"><a href="#🔹-9-轻量化系统（减少后台占用）" class="headerlink" title="🔹 9. 轻量化系统（减少后台占用）"></a><strong>🔹 9. 轻量化系统（减少后台占用）</strong></h2><p>如果你希望游戏运行时 <strong>减少 CPU 负担</strong>，可以：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop bluetooth</span><br><span class="line">systemctl <span class="built_in">disable</span> bluetooth</span><br></pre></td></tr></table></figure><br>这样可以 <strong>减少不必要的服务运行</strong>，游戏时提高 CPU 性能。</p><hr><h1 id="🚀-总结（Hyprland-专属游戏优化）"><a href="#🚀-总结（Hyprland-专属游戏优化）" class="headerlink" title="🚀 总结（Hyprland 专属游戏优化）"></a><strong>🚀 总结（Hyprland 专属游戏优化）</strong></h1><div class="table-container"><table><thead><tr><th><strong>优化</strong></th><th><strong>作用</strong></th><th><strong>适用平台</strong></th></tr></thead><tbody><tr><td><strong>使用 <code>gamescope</code></strong></td><td><strong>Wayland 下的游戏模式，优化全屏性能</strong></td><td><strong>所有游戏</strong> 🎮</td></tr><tr><td><strong>启用 <code>gamemode</code></strong></td><td><strong>自动调整 CPU 频率，减少后台占用</strong></td><td><strong>所有游戏</strong> 🚀</td></tr><tr><td><strong>优化 <code>Hyprland</code> 配置</strong></td><td><strong>减少屏幕重绘，降低输入延迟</strong></td><td><strong>Wayland 专属</strong> 🎯</td></tr><tr><td><strong>关闭 <code>vsync</code></strong></td><td><strong>减少延迟，提高 FPS</strong></td><td><strong>Hyprland 专属</strong> 🔥</td></tr><tr><td><strong>开启 <code>fsync</code></strong></td><td><strong>提高 Wine / Proton 游戏流畅度</strong></td><td><strong>Steam / Proton</strong> 🏆</td></tr><tr><td><strong>安装 <code>mesa-git</code></strong></td><td><strong>AMD Vulkan 提升</strong></td><td><strong>AMD 用户</strong> 🎨</td></tr><tr><td><strong>禁用 <code>bluetooth</code></strong></td><td><strong>减少后台占用，提高 CPU 性能</strong></td><td><strong>所有系统</strong> ⚡</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;🎮-Hyprland-游戏优化（Wayland-专用）&quot;&gt;&lt;a href=&quot;#🎮-Hyprland-游戏优化（Wayland-专用）&quot; class=&quot;headerlink&quot; title=&quot;🎮 Hyprland + 游戏优化（Wayland 专用）&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="hyprland" scheme="https://lonerorz.github.io/tags/hyprland/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://lonerorz.github.io/posts/b859.html"/>
    <id>https://lonerorz.github.io/posts/b859.html</id>
    <published>2025-03-31T22:13:32.915Z</published>
    <updated>2025-04-04T12:26:44.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-写法大全"><a href="#Markdown-写法大全" class="headerlink" title="Markdown 写法大全"></a>Markdown 写法大全</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. <strong>标题</strong></h2><p>Markdown 使用 <code>#</code> 来表示标题，最多支持六级标题。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h2 id="2-段落与换行"><a href="#2-段落与换行" class="headerlink" title="2. 段落与换行"></a>2. <strong>段落与换行</strong></h2><ul><li>段落之间需要空行来区分。</li><li>若想在段落内换行，可以在行末加两个空格，然后回车。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落。</span><br><span class="line"></span><br><span class="line">这是另一个段落。</span><br><span class="line"></span><br><span class="line">这是段落内的换行</span><br><span class="line">比如这句话会换行。</span><br></pre></td></tr></table></figure><h2 id="3-强调文本"><a href="#3-强调文本" class="headerlink" title="3. 强调文本"></a>3. <strong>强调文本</strong></h2><ul><li><em>斜体</em>：用一个星号 <code>*</code> 或者一个下划线 <code>_</code> 包围文本。</li><li><strong>加粗</strong>：用两个星号 <code>**</code> 或者两个下划线 <code>__</code> 包围文本。</li><li><strong><em>斜体加粗</em></strong>：用三个星号 <code>***</code> 包围文本。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span> 或 <span class="emphasis">_斜体_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**加粗**</span> 或 <span class="strong">__加粗__</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*斜体加粗*</span>**</span> 或 <span class="strong">__<span class="emphasis">_斜体加粗_</span>__</span></span><br></pre></td></tr></table></figure><h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4. 列表"></a>4. <strong>列表</strong></h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用 <code>-</code>、<code>+</code> 或 <code>*</code> 来创建无序列表。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 项目 1</span><br><span class="line"><span class="bullet">-</span> 项目 2</span><br><span class="line"><span class="bullet">  -</span> 子项目 1</span><br><span class="line"><span class="bullet">  -</span> 子项目 2</span><br><span class="line"><span class="bullet">-</span> 项目 3</span><br></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>使用数字加点 <code>1.</code> 来创建有序列表。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br><span class="line"><span class="bullet">   1.</span> 子项 1</span><br><span class="line"><span class="bullet">   2.</span> 子项 2</span><br></pre></td></tr></table></figure><h2 id="5-链接"><a href="#5-链接" class="headerlink" title="5. 链接"></a>5. <strong>链接</strong></h2><ul><li>插入链接时，使用 <code>[链接文字](URL)</code> 格式。</li><li>还可以添加标题，格式为 <code>[链接文字](URL &quot;标题&quot;)</code>。</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>](<span class="link">https://www.google.com</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">GitHub</span>](<span class="link">https://github.com &quot;GitHub 官网&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="6-图片"><a href="#6-图片" class="headerlink" title="6. 图片"></a>6. <strong>图片</strong></h2><p>插入图片的语法与链接类似，不过前面多了一个 <code>!</code> 符号。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">图片URL</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">GitHub Logo</span>](<span class="link">https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png</span>)</span><br></pre></td></tr></table></figure><h2 id="7-代码"><a href="#7-代码" class="headerlink" title="7. 代码"></a>7. <strong>代码</strong></h2><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p>使用反引号 <code>` </code> 包围代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是 <span class="code">`行内代码`</span> 示例。</span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>使用三个反引号 ``` 或者四个空格来表示多行代码。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">这是一个代码块。</span></span><br><span class="line"><span class="code">多行代码可以在这里显示。</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">或者：</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"># 代码块可以指定语言，如 Python</span><br><span class="line">def greet():</span><br><span class="line">    print(&quot;Hello, world!&quot;)</span><br></pre></td></tr></table></figure><h2 id="8-引用"><a href="#8-引用" class="headerlink" title="8. 引用"></a>8. <strong>引用</strong></h2><p>使用 <code>&gt;</code> 来表示引用：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个引用。</span></span><br><span class="line"><span class="quote">&gt; 可以包含多行。</span></span><br></pre></td></tr></table></figure><h2 id="9-水平线"><a href="#9-水平线" class="headerlink" title="9. 水平线"></a>9. <strong>水平线</strong></h2><p>使用三个或更多的 <code>-</code>、<code>*</code> 或 <code>_</code> 创建水平线。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">或者</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><h2 id="10-任务列表"><a href="#10-任务列表" class="headerlink" title="10. 任务列表"></a>10. <strong>任务列表</strong></h2><p>使用 <code>[ ]</code> 创建任务列表，已完成的任务使用 <code>[x]</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] 完成任务 1</span><br><span class="line"><span class="bullet">-</span> [ ] 未完成任务 2</span><br><span class="line"><span class="bullet">-</span> [x] 完成任务 3</span><br></pre></td></tr></table></figure><h2 id="11-表格"><a href="#11-表格" class="headerlink" title="11. 表格"></a>11. <strong>表格</strong></h2><p>使用 <code>|</code> 分隔列，<code>-</code> 分隔表头和表格内容。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 姓名   | 年龄 | 城市  |</span><br><span class="line">|--------|------|-------|</span><br><span class="line">| 小明   | 25   | 北京  |</span><br><span class="line">| 小红   | 30   | 上海  |</span><br><span class="line">| 小强   | 22   | 广州  |</span><br></pre></td></tr></table></figure><h2 id="12-HTML-标签"><a href="#12-HTML-标签" class="headerlink" title="12. HTML 标签"></a>12. <strong>HTML 标签</strong></h2><p>虽然 Markdown 主要使用标记语法，但也可以直接在 Markdown 文件中插入 HTML 标签。例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>这是一个段落，包含 <span class="language-xml"><span class="tag">&lt;<span class="name">strong</span>&gt;</span></span>加粗<span class="language-xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span> 和 <span class="language-xml"><span class="tag">&lt;<span class="name">em</span>&gt;</span></span>斜体<span class="language-xml"><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span>。<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="13-自动链接"><a href="#13-自动链接" class="headerlink" title="13. 自动链接"></a>13. <strong>自动链接</strong></h2><p>直接写网址，Markdown 会自动将其转化为可点击链接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.google.com</span><br></pre></td></tr></table></figure><h2 id="14-嵌入-YouTube-视频"><a href="#14-嵌入-YouTube-视频" class="headerlink" title="14. 嵌入 YouTube 视频"></a>14. <strong>嵌入 YouTube 视频</strong></h2><p>可以通过 HTML 的 <code>&lt;iframe&gt;</code> 标签嵌入 YouTube 视频（Markdown 本身不支持直接嵌入视频）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;560&quot;</span> <span class="attr">height</span>=<span class="string">&quot;315&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.youtube.com/embed/dQw4w9WgXcQ&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allow</span>=<span class="string">&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-使用-•-圆点（无序列表）"><a href="#15-使用-•-圆点（无序列表）" class="headerlink" title="15. 使用 • 圆点（无序列表）"></a>15. <strong>使用 <code>•</code> 圆点（无序列表）</strong></h2><p>Markdown 渲染器通常会把无序列表项渲染为圆点 <code>•</code>。你可以直接使用 HTML 标签来显示自定义无序列表样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-自定义锚点链接"><a href="#16-自定义锚点链接" class="headerlink" title="16. 自定义锚点链接"></a>16. <strong>自定义锚点链接</strong></h2><p>你可以在标题后手动添加 ID，生成自定义锚点链接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 这是一个标题 &#123;#custom-id&#125;</span></span><br></pre></td></tr></table></figure><p>然后你可以通过 <code>[链接文本](#custom-id)</code> 来跳转。</p><hr><h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><h3 id="1-代码块指定语言"><a href="#1-代码块指定语言" class="headerlink" title="1. 代码块指定语言"></a>1. <strong>代码块指定语言</strong></h3><p>代码块可以指定语言，以便于语法高亮。例如，指定为 <code>python</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-删除线"><a href="#2-删除线" class="headerlink" title="2. 删除线"></a>2. <strong>删除线</strong></h3><p>Markdown 支持删除线语法，使用 <code>~~</code> 来表示删除线：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~这是一个被删除的文本~~</span><br></pre></td></tr></table></figure><h3 id="3-脚注"><a href="#3-脚注" class="headerlink" title="3. 脚注"></a>3. <strong>脚注</strong></h3><p>某些 Markdown 渲染器支持脚注：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个脚注[^1]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">这是脚注的内容。</span></span><br></pre></td></tr></table></figure><h3 id="4-行内-HTML（嵌入表格等）"><a href="#4-行内-HTML（嵌入表格等）" class="headerlink" title="4. 行内 HTML（嵌入表格等）"></a>4. <strong>行内 HTML（嵌入表格等）</strong></h3><p>你可以直接在 Markdown 中嵌入 HTML 标签，例如，插入一个表格、iframe 等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-数学公式"><a href="#5-数学公式" class="headerlink" title="5. 数学公式"></a>5. <strong>数学公式</strong></h3><p>在一些支持 LaTeX 的 Markdown 渲染器中，可以使用数学公式语法。例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">E = mc^2</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Markdown是一种轻量级的标记语言，它提供了一种简洁的方法来格式化文本。通过组合这些基本语法，你可以快速生成格式化文本，适用于文档、博客、笔记等多种场景。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown-写法大全&quot;&gt;&lt;a href=&quot;#Markdown-写法大全&quot; class=&quot;headerlink&quot; title=&quot;Markdown 写法大全&quot;&gt;&lt;/a&gt;Markdown 写法大全&lt;/h1&gt;&lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot;</summary>
      
    
    
    
    
    <category term="markdown" scheme="https://lonerorz.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Yazi常用操作和快捷键</title>
    <link href="https://lonerorz.github.io/posts/8a92.html"/>
    <id>https://lonerorz.github.io/posts/8a92.html</id>
    <published>2025-03-31T16:00:00.000Z</published>
    <updated>2025-04-04T12:25:09.765Z</updated>
    
    <content type="html"><![CDATA[<p><code>Yazi</code> 常用操作和快捷键</p><h3 id="一、基础操作"><a href="#一、基础操作" class="headerlink" title="一、基础操作"></a>一、基础操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>yazi</code></td><td>启动 Yazi 编辑器</td></tr><tr><td><code>q</code></td><td>退出 Yazi并跳转到选中目录</td></tr><tr><td>Q</td><td>退出Yazi并返回到进入时的目录</td></tr><tr><td><code>~</code></td><td>打开帮助菜单</td></tr><tr><td><code>Ctrl + c</code></td><td>退出当前标签页 (关闭标签)</td></tr></tbody></table></div><h3 id="二、导航操作"><a href="#二、导航操作" class="headerlink" title="二、导航操作"></a>二、导航操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>k</code></td><td>向上移动光标</td></tr><tr><td><code>j</code></td><td>向下移动光标</td></tr><tr><td><code>l</code></td><td>进入当前目录</td></tr><tr><td><code>h</code></td><td>返回父级目录</td></tr><tr><td><code>K</code></td><td>向上滚动 5 行</td></tr><tr><td><code>J</code></td><td>向下滚动 5 行</td></tr><tr><td><code>g</code> ⇒ <code>g</code></td><td>移动光标到顶部</td></tr><tr><td><code>G</code></td><td>移动光标到底部</td></tr></tbody></table></div><h3 id="三、选择操作"><a href="#三、选择操作" class="headerlink" title="三、选择操作"></a>三、选择操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>Space</code></td><td>切换选择当前文件/目录</td></tr><tr><td><code>v</code></td><td>进入可视模式 (选择模式)</td></tr><tr><td><code>V</code></td><td>进入可视模式 (取消选择模式)</td></tr><tr><td><code>Ctrl + a</code></td><td>选择所有文件</td></tr><tr><td><code>Ctrl + r</code></td><td>反选所有文件</td></tr><tr><td><code>Esc</code></td><td>取消选择操作</td></tr></tbody></table></div><h3 id="四、文件操作"><a href="#四、文件操作" class="headerlink" title="四、文件操作"></a>四、文件操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>o</code></td><td>打开选中文件</td></tr><tr><td><code>O</code></td><td>交互式打开选中文件</td></tr><tr><td><code>Enter</code></td><td>打开选中文件</td></tr><tr><td><code>Ctrl + Enter</code></td><td>交互式打开选中文件（某些终端可能不支持）</td></tr><tr><td><code>y</code></td><td>复制选中文件 (Yank)</td></tr><tr><td><code>x</code></td><td>剪切选中文件 (Yank)</td></tr><tr><td><code>p</code></td><td>粘贴已复制或剪切的文件</td></tr><tr><td><code>P</code></td><td>粘贴文件 (如果目标文件存在则覆盖)</td></tr><tr><td><code>-</code></td><td>创建符号链接到文件的绝对路径</td></tr><tr><td><code>_</code></td><td>创建符号链接到文件的相对路径</td></tr><tr><td><code>Ctrl + -</code></td><td>创建硬链接到文件</td></tr><tr><td><code>Y</code> 或 <code>X</code></td><td>取消复制或剪切操作</td></tr><tr><td><code>d</code></td><td>将选中文件移动到垃圾桶</td></tr><tr><td><code>D</code></td><td>永久删除选中文件</td></tr><tr><td><code>a</code></td><td>创建新文件或目录 (目录以 <code>/</code> 结尾)</td></tr><tr><td><code>r</code></td><td>重命名选中文件</td></tr><tr><td><code>;</code></td><td>运行 shell 命令</td></tr><tr><td><code>:</code></td><td>运行 shell 命令（等待命令完成）</td></tr><tr><td><code>.</code></td><td>切换隐藏文件的可见性</td></tr><tr><td><code>z</code></td><td>使用 zoxide 快速跳转到某个目录</td></tr><tr><td><code>Z</code></td><td>使用 fzf 跳转到某个目录或揭示某个文件</td></tr></tbody></table></div><h3 id="五、路径复制操作"><a href="#五、路径复制操作" class="headerlink" title="五、路径复制操作"></a>五、路径复制操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>c ⇒ c</code></td><td>复制文件路径</td></tr><tr><td><code>c ⇒ d</code></td><td>复制目录路径</td></tr><tr><td><code>c ⇒ f</code></td><td>复制文件名</td></tr><tr><td><code>c ⇒ n</code></td><td>复制文件名（不包含扩展名）</td></tr></tbody></table></div><h3 id="六、文件过滤和查找操作"><a href="#六、文件过滤和查找操作" class="headerlink" title="六、文件过滤和查找操作"></a>六、文件过滤和查找操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>f</code></td><td>过滤文件</td></tr><tr><td><code>/</code></td><td>查找下一个文件</td></tr><tr><td><code>?</code></td><td>查找上一个文件</td></tr><tr><td><code>n</code></td><td>跳到下一个查找到的文件</td></tr><tr><td><code>N</code></td><td>跳到上一个查找到的文件</td></tr><tr><td><code>s</code></td><td>使用 <code>fd</code> 按名称搜索文件</td></tr><tr><td><code>S</code></td><td>使用 <code>ripgrep</code> 按内容搜索文件</td></tr><tr><td><code>Ctrl + s</code></td><td>取消当前进行的搜索</td></tr></tbody></table></div><h3 id="七、文件排序操作"><a href="#七、文件排序操作" class="headerlink" title="七、文件排序操作"></a>七、文件排序操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>, ⇒ m</code></td><td>按修改时间排序</td></tr><tr><td><code>, ⇒ M</code></td><td>按修改时间倒序排序</td></tr><tr><td><code>, ⇒ c</code></td><td>按创建时间排序</td></tr><tr><td><code>, ⇒ C</code></td><td>按创建时间倒序排序</td></tr><tr><td><code>, ⇒ e</code></td><td>按文件扩展名排序</td></tr><tr><td><code>, ⇒ E</code></td><td>按文件扩展名倒序排序</td></tr><tr><td><code>, ⇒ a</code></td><td>按字母排序</td></tr><tr><td><code>, ⇒ A</code></td><td>按字母倒序排序</td></tr><tr><td><code>, ⇒ n</code></td><td>按自然排序</td></tr><tr><td><code>, ⇒ N</code></td><td>按自然排序倒序</td></tr><tr><td><code>, ⇒ s</code></td><td>按文件大小排序</td></tr><tr><td><code>, ⇒ S</code></td><td>按文件大小倒序排序</td></tr><tr><td><code>, ⇒ r</code></td><td>按随机顺序排序</td></tr></tbody></table></div><h3 id="八、多标签操作"><a href="#八、多标签操作" class="headerlink" title="八、多标签操作"></a>八、多标签操作</h3><div class="table-container"><table><thead><tr><th>快捷键</th><th>操作</th></tr></thead><tbody><tr><td><code>t</code></td><td>创建新标签页并保持当前工作目录</td></tr><tr><td><code>1, 2, ..., 9</code></td><td>切换到第 N 个标签页</td></tr><tr><td><code>[</code></td><td>切换到前一个标签页</td></tr><tr><td><code>]</code></td><td>切换到下一个标签页</td></tr><tr><td><code>&#123;</code></td><td>将当前标签页与前一个标签页交换</td></tr><tr><td><code>&#125;</code></td><td>将当前标签页与下一个标签页交换</td></tr><tr><td><code>Ctrl + c</code></td><td>关闭当前标签页</td></tr></tbody></table></div><hr><h3 id="九、主题和自定义"><a href="#九、主题和自定义" class="headerlink" title="九、主题和自定义"></a>九、主题和自定义</h3><ul><li><strong>主题选择</strong>：<br>从 <a href="https://github.com/your-yazi-flavors">Yazi Flavors</a> 仓库中选择一个你喜欢的配色方案，或者创建一个你自己的主题。</li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;Yazi&lt;/code&gt; 常用操作和快捷键&lt;/p&gt;
&lt;h3 id=&quot;一、基础操作&quot;&gt;&lt;a href=&quot;#一、基础操作&quot; class=&quot;headerlink&quot; title=&quot;一、基础操作&quot;&gt;&lt;/a&gt;一、基础操作&lt;/h3&gt;&lt;div class=&quot;table-conta</summary>
      
    
    
    
    
    <category term="yazi" scheme="https://lonerorz.github.io/tags/yazi/"/>
    
  </entry>
  
  <entry>
    <title>安装ArchLinux</title>
    <link href="https://lonerorz.github.io/posts/0.html"/>
    <id>https://lonerorz.github.io/posts/0.html</id>
    <published>2025-03-30T16:00:00.000Z</published>
    <updated>2025-08-02T09:28:56.279Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天演示Archlinux的安装与配置"><a href="#今天演示Archlinux的安装与配置" class="headerlink" title="今天演示Archlinux的安装与配置"></a>今天演示Archlinux的安装与配置</h1><p>我打算安装到<code>btrfs</code>文件系统上，桌面用<code>Hyprland</code>，显卡是N卡，附加Windows的双系统引导。</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><ol><li><p><strong>下载ISO镜像文件</strong><br>先去官网下载最新的ISO镜像文件，刻录到U盘，从U盘启动Arch的安装镜像。网上有很多教程，我就不演示了。</p></li><li><p><strong>连接互联网</strong></p><ul><li>如果有网线：输入命令<code>ip link</code>。</li><li>如果没网线就连wifi：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iwctl</span><br><span class="line">station &lt;网卡名&gt; connect &lt;WIFI名&gt;</span><br><span class="line"><span class="comment"># 输入密码</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><ul><li>测试网络连接：<code>ping baidu.com</code></li></ul></li></ol><h2 id="2-开始安装Archlinux"><a href="#2-开始安装Archlinux" class="headerlink" title="2. 开始安装Archlinux"></a>2. 开始安装Archlinux</h2><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><p>详细安装教程可参考<a href="https://wiki.archlinux.org/title/installation_guide">Arch Wiki</a>。</p><ol><li><p><strong>联网</strong></p></li><li><p><strong>检验是否是UEFI64位模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /sys/firmware/efi/fw_platform_size</span><br></pre></td></tr></table></figure></li><li><p><strong>设置时区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure></li><li><p><strong>磁盘分区</strong><br>注意不要把数据格式化了。前五个分区是Windows的分区，Windows有一个EFI分区，可以和Arch共用。为Archlinux准备一个512MB的EFI分区，8G的交换分区，其余空间创建为linux filesystem分区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfdisk /dev/nvme0n1 (你的硬盘)</span><br></pre></td></tr></table></figure></li><li><p><strong>格式化分区</strong></p><ul><li>如果你为arch准备了单独的EFI分区<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F 32 /dev/efi_system_partition</span><br></pre></td></tr></table></figure></li><li>格式化交换分区<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /dev/swap_partition</span><br></pre></td></tr></table></figure></li><li>格式化<code>btrfs</code>文件系统<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkfs.btrfs /dev/root_partition -f</span><br><span class="line">mount /dev/root_partition /mnt</span><br><span class="line">btrfs subvolume create /mnt/@</span><br><span class="line">btrfs subvolume create /mnt/@home</span><br><span class="line">umount /dev/root_partition</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>挂载分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/root_partition /mnt -o subvol=@</span><br><span class="line">mount /dev/root_partition /mnt/home -o subvol=@home --<span class="built_in">mkdir</span></span><br><span class="line">mount /dev/efi_system_partition /mnt/boot/efi --<span class="built_in">mkdir</span></span><br><span class="line">swapon /dev/swap_partition</span><br></pre></td></tr></table></figure></li><li><p><strong>设置镜像源并安装系统</strong></p><ul><li>编辑<code>/etc/pacman.d/mirrorlist</code>，在开头加上镜像源：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure></li><li>更新并安装系统：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -Sy archlinux-keyring <span class="comment"># 更新密钥</span></span><br><span class="line">pacman -Syy</span><br><span class="line">pacstrap -K /mnt base base-devel linux linux-firmware linux-headers git fish grub efibootmgr os-prober openssl networkmanager dhcpcd neovim</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="3-Arch的基础配置"><a href="#3-Arch的基础配置" class="headerlink" title="3. Arch的基础配置"></a>3. Arch的基础配置</h2><ol><li><p><strong>挂载配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>时间设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure></li><li><p><strong>语言设置</strong></p><ul><li>编辑<code>/etc/locale.gen</code>，取消<code>en_US.UTF-8</code>和<code>zh_CN.UTF-8</code>前的注释</li><li>生成语言包：<code>locale-gen</code></li><li>编辑<code>/etc/locale.conf</code>，写入<code>LANG=en_US.UTF-8</code></li></ul></li><li><p><strong>网络配置</strong></p><ul><li>编辑<code>/etc/hostname</code>，写入你的hostname（任意取名）</li><li>启用网络服务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br><span class="line">systemctl <span class="built_in">enable</span> NetworkManager</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Initramfs配置</strong></p><ul><li>编辑<code>/etc/mkinitcpio.conf</code>，在<code>HOOKS</code>中加入<code>btrfs</code><br>如果安装时忘记装<code>btrfs</code>，现在装上：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S btrfs-progs</span><br><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Pacman配置</strong></p><ul><li>检查<code>/etc/pacman.d/mirrorlist</code></li><li>编辑<code>/etc/pacman.conf</code>，取消<code>Color</code>和<code>ParallelDownloads</code>前的注释，加上一行<code>ILoveCandy</code>（吃豆人彩蛋）</li><li>更新包数据库：<code>pacman -Syy</code></li></ul></li><li><p><strong>用户配置</strong></p><ul><li>设置root的密码：<code>passwd</code></li><li>添加一个用户：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel &lt;用户名&gt;</span><br><span class="line">passwd &lt;用户名&gt;</span><br></pre></td></tr></table></figure></li><li>为<code>wheel</code>组中的用户添加sudo权限：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvim /etc/sudoers</span><br><span class="line"><span class="comment"># 将108行的注释去掉</span></span><br><span class="line">%wheel ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li>设置用户shell：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su &lt;用户名&gt;</span><br><span class="line">whereis fish</span><br><span class="line">chsh -s /usr/bin/fish</span><br><span class="line"><span class="comment"># Ctrl+D 退出用户登录</span></span><br><span class="line">su &lt;用户名&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>引导配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-install --recheck /dev/你的硬盘</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/default/grub</span><br><span class="line"><span class="comment"># 将最后一行的注释去掉，启用os-prober检测双系统</span></span><br><span class="line"><span class="comment"># 如果之前为Arch创建了单独的EFI，那么现在将windows的EFI分区挂载到任意目录 例如(/mnt)</span></span><br><span class="line"><span class="built_in">sudo</span> os-prober</span><br><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></li><li><p><strong>配置完引导后重启电脑并拔掉U盘</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+D 退出登录</span><br><span class="line">umount -R /mnt</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-重启后配置"><a href="#4-重启后配置" class="headerlink" title="4. 重启后配置"></a>4. 重启后配置</h2><ol><li><p><strong>连接互联网</strong><br>如果有网线跳过这一步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli device wifi connect &lt;网络名&gt; &lt;密码&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>安装Nvidia驱动</strong></p><ul><li>查看显卡：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci -k | grep -A 2 -E <span class="string">&quot;(VGA|3D)&quot;</span></span><br></pre></td></tr></table></figure></li><li>安装驱动：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvidia nvidia-utils nvidia-settings</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/default/grub</span><br><span class="line"><span class="comment"># 在GRUB_CMDLINE_LINUX中添加nvidia_drm.modeset=1</span></span><br><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"><span class="built_in">sudo</span> nvim /etc/mkinitcpio.conf</span><br><span class="line"><span class="comment"># 在MODULES中加入nvidia nvidia_modeset nvidia_uvm nvidia_drm</span></span><br><span class="line"><span class="comment"># 将kms从HOOKS中去掉</span></span><br><span class="line"><span class="built_in">sudo</span> mkinitcpio -P</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></li><li>验证是否安装成功：<code>nvidia-smi</code></li><li><p>在/etc/pacman.d/hooks/nvidia.hook中配置Nvidia更新钩子：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Trigger]</span></span><br><span class="line"><span class="attr">Operation</span>=Install</span><br><span class="line"><span class="attr">Operation</span>=Upgrade</span><br><span class="line"><span class="attr">Operation</span>=Remove</span><br><span class="line"><span class="attr">Type</span>=Package</span><br><span class="line"><span class="attr">Target</span>=nvidia</span><br><span class="line"><span class="attr">Target</span>=linux</span><br><span class="line"><span class="comment"># Change the linux part above if a different kernel is used</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Action]</span></span><br><span class="line"><span class="attr">Description</span>=Update NVIDIA module in initcpio</span><br><span class="line"><span class="attr">Depends</span>=mkinitcpio</span><br><span class="line"><span class="attr">When</span>=PostTransaction</span><br><span class="line">NeedsTargets</span><br><span class="line"><span class="attr">Exec</span>=/bin/sh -c <span class="string">&#x27;while read -r trg; do case $trg in linux*) exit 0; esac; done; /usr/bin/mkinitcpio -P&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><p>安装Hyprland桌面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S hyprland kitty waybar</span><br><span class="line"><span class="built_in">sudo</span> pacman -S sddm</span><br><span class="line"><span class="built_in">sudo</span> pacman -S ttf-jetbrains-mono-nerd adobe-source-han-sans-cn-fonts adobe-source-code-pro-fonts</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><h2 id="5-安装timeshift进行初始备份"><a href="#5-安装timeshift进行初始备份" class="headerlink" title="5.安装timeshift进行初始备份"></a>5.安装timeshift进行初始备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">paru -S timeshift-systemd-timer grub-btrfs xorg-xhost <span class="comment">#安装timeshift</span></span><br><span class="line"><span class="built_in">sudo</span> SYSTEMD_EDITOR=vim systemctl edit --full grub-btrfsd</span><br><span class="line">替换 grub-btrfsd --syslog /.snapshots 为 grub-btrfsd --syslog -t</span><br><span class="line"><span class="built_in">sudo</span> timeshift --create --comments <span class="string">&quot;staring point&quot;</span> <span class="comment">#创建备份</span></span><br><span class="line"><span class="built_in">sudo</span> timeshift --list <span class="comment">#查看备份列表</span></span><br><span class="line"><span class="built_in">sudo</span> timeshift --restore --snapshot <span class="string">&quot;SNAPSHOT_NAME&quot;</span> <span class="comment">#还原快照</span></span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><p>等待重启后，输入用户密码进入Hyprland。</p><h3 id="Nvidia设置"><a href="#Nvidia设置" class="headerlink" title="Nvidia设置"></a>Nvidia设置</h3><ul><li>参考<a href="https://wiki.hyprland.org/Nvidia/">Nvidia设置指南</a></li><li>进入tty3并登录用户：<code>CTRL+ALT+F3</code></li><li>编辑<code>~/.config/hypr/hyprland.conf</code>，添加NVIDIA环境变量：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">env = LIBVA_DRIVER_NAME,nvidia</span><br><span class="line">env = XDG_SESSION_TYPE,wayland</span><br><span class="line">env = GBM_BACKEND,nvidia-drm</span><br><span class="line">env = __GLX_VENDOR_LIBRARY_NAME,nvidia</span><br><span class="line">env = WLR_NO_HARDWARE_CURSORS,1</span><br></pre></td></tr></table></figure></li><li><p>重启后进入Hyprland，常用快捷键：</p><ul><li>Win+Q 开启终端</li><li>Win+C 关闭窗口</li><li>Win+R 呼出菜单</li><li><p>Win+数字 切换桌面</p></li><li><p>Win+Shift+数字 将当前窗口移动到对应工作区</p></li><li>Win+鼠标左键 拖动窗口</li><li>Win+鼠标右键 调整窗口大小</li><li>Win+V 让窗口浮动出来</li></ul></li></ul><h2 id="6-其他软件安装与配置"><a href="#6-其他软件安装与配置" class="headerlink" title="6. 其他软件安装与配置"></a>6. 其他软件安装与配置</h2><ol><li><p><strong>安装输入法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5 fcitx5-chinese-addons fcitx5-configtool</span><br></pre></td></tr></table></figure></li><li><p><strong>安装<code>paru</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/paru.git</span><br><span class="line"><span class="built_in">cd</span> paru</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure></li><li><p><strong>安装其他软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S rofi</span><br><span class="line">paru -S google-chrome</span><br><span class="line"><span class="built_in">sudo</span> pacman -S code</span><br></pre></td></tr></table></figure></li><li><p><strong>配置</strong></p><ul><li>获取我的配置文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HeaoYe/config</span><br><span class="line"><span class="built_in">cd</span> config</span><br></pre></td></tr></table></figure></li><li>配置neovim：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> nvim ~/.config/ -r</span><br></pre></td></tr></table></figure></li><li>配置chrome和vscode：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> *.conf ~/.config/</span><br><span class="line">code</span><br><span class="line"><span class="comment"># 安装插件：clangd CMake CmakeTools CodeLLDB GruvboxTheme</span></span><br><span class="line"><span class="built_in">cp</span> settings.json ~/.config/Code\ -\ OSS/User/</span><br></pre></td></tr></table></figure></li><li>配置kitty：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> kitty ~/.config/ -r</span><br><span class="line"><span class="comment"># 在~/.config/kitty/kitty.conf 中设置字体大小</span></span><br></pre></td></tr></table></figure></li><li>配置hyprland：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S xorg-xrdb</span><br><span class="line"><span class="built_in">cp</span> hypr ~/.config/ -r</span><br></pre></td></tr></table></figure></li><li>配置waybar：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> waybar ~/.config/ -r</span><br><span class="line"><span class="comment"># 手动启动waybar查看效果</span></span><br><span class="line">waybar -c ~/.config/waybar/Waybar-3.0/config -s ~/.config/waybar/Waybar-3.0/style.css</span><br></pre></td></tr></table></figure></li><li>配置声音：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S pavucontrol-qt</span><br><span class="line">pavucontrol-qt</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>可选软件安装</strong></p><ul><li><code>nvtop</code>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S nvtop</span><br></pre></td></tr></table></figure></li><li><code>grim</code>截图软件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S grim</span><br></pre></td></tr></table></figure></li><li>QQ音乐：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paru -S qqmusic-bin\</span><br></pre></td></tr></table></figure></li><li>大鹅：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paru -S daed-git</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，Archlinux的配置完成。Hyprland和waybar以及kitty的配置文件是从他人处clone的，相关链接请查看简介。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;今天演示Archlinux的安装与配置&quot;&gt;&lt;a href=&quot;#今天演示Archlinux的安装与配置&quot; class=&quot;headerlink&quot; title=&quot;今天演示Archlinux的安装与配置&quot;&gt;&lt;/a&gt;今天演示Archlinux的安装与配置&lt;/h1&gt;&lt;p&gt;我打</summary>
      
    
    
    
    
    <category term="linux" scheme="https://lonerorz.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lonerorz.github.io/posts/4a17b156.html"/>
    <id>https://lonerorz.github.io/posts/4a17b156.html</id>
    <published>2025-03-29T16:00:00.000Z</published>
    <updated>2025-04-04T12:27:07.765Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":"","title":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":"","title":""}]</div>  </div><h2 id="测试外挂标签"><a href="#测试外挂标签" class="headerlink" title="测试外挂标签"></a>测试外挂标签</h2><div class="note danger simple"><p>danger 提示块标签</p></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="linux" scheme="https://lonerorz.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>配置venv环境</title>
    <link href="https://lonerorz.github.io/posts/fe39.html"/>
    <id>https://lonerorz.github.io/posts/fe39.html</id>
    <published>2025-03-02T16:00:00.000Z</published>
    <updated>2025-03-31T20:58:47.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应用venv环境"><a href="#应用venv环境" class="headerlink" title="应用venv环境"></a>应用<strong>venv</strong>环境</h1><p>以下是针对 <strong>Fish shell</strong> 的具体步骤：</p><h3 id="1-创建虚拟环境"><a href="#1-创建虚拟环境" class="headerlink" title="1. 创建虚拟环境"></a>1. <strong>创建虚拟环境</strong></h3><p>在你的项目目录中创建一个虚拟环境，和在其他 shell 中一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv venv</span><br></pre></td></tr></table></figure><p>这将创建一个名为 <code>venv</code> 的目录，里面包含 Python 解释器和必要的标准库。</p><h3 id="2-激活虚拟环境-Fish-shell"><a href="#2-激活虚拟环境-Fish-shell" class="headerlink" title="2. 激活虚拟环境 (Fish shell)"></a>2. <strong>激活虚拟环境 (Fish shell)</strong></h3><p>在 <strong>Fish shell</strong> 中，激活虚拟环境的命令稍有不同。你需要运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate.fish</span><br></pre></td></tr></table></figure><p>这会激活虚拟环境，命令行提示符会显示 <code>(venv)</code>，表示当前正在使用该虚拟环境。</p><h3 id="3-安装依赖"><a href="#3-安装依赖" class="headerlink" title="3. 安装依赖"></a>3. <strong>安装依赖</strong></h3><p>激活虚拟环境后，你可以使用 <code>pip</code> 来安装项目依赖。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h3 id="4-创建-requirements-txt"><a href="#4-创建-requirements-txt" class="headerlink" title="4. 创建 requirements.txt"></a>4. <strong>创建 <code>requirements.txt</code></strong></h3><p>安装好需要的依赖后，可以将当前虚拟环境中的所有安装包列出并写入 <code>requirements.txt</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h3 id="5-退出虚拟环境"><a href="#5-退出虚拟环境" class="headerlink" title="5. 退出虚拟环境"></a>5. <strong>退出虚拟环境</strong></h3><p>当你完成工作并希望退出虚拟环境时，在 <strong>Fish shell</strong> 中，你可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><p>这会退出虚拟环境并返回到系统的默认 Python 环境。</p><h3 id="6-重新激活虚拟环境"><a href="#6-重新激活虚拟环境" class="headerlink" title="6. 重新激活虚拟环境"></a>6. <strong>重新激活虚拟环境</strong></h3><p>如果你以后想重新进入虚拟环境，只需再次运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate.fish</span><br></pre></td></tr></table></figure><h3 id="7-删除虚拟环境"><a href="#7-删除虚拟环境" class="headerlink" title="7. 删除虚拟环境"></a>7. <strong>删除虚拟环境</strong></h3><p>如果你不再需要虚拟环境，可以直接删除 <code>venv</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf venv</span><br></pre></td></tr></table></figure><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在 <strong>Fish shell</strong> 中，激活虚拟环境的命令是 <code>source venv/bin/activate.fish</code>，而退出虚拟环境的命令与其他 shell 中相同，都是 <code>deactivate</code>。其他操作与标准的虚拟环境使用方法保持一致。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;应用venv环境&quot;&gt;&lt;a href=&quot;#应用venv环境&quot; class=&quot;headerlink&quot; title=&quot;应用venv环境&quot;&gt;&lt;/a&gt;应用&lt;strong&gt;venv&lt;/strong&gt;环境&lt;/h1&gt;&lt;p&gt;以下是针对 &lt;strong&gt;Fish shell&lt;/str</summary>
      
    
    
    
    
    <category term="python" scheme="https://lonerorz.github.io/tags/python/"/>
    
  </entry>
  
</feed>
